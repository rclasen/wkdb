#!/usr/bin/perl

# identify new files in DB, merge them, add workouts

use warnings;
use strict;
use Getopt::Long;

use WkDB;

# TODO: POD
# TODO: merge with wkdb

my $opt_all = 0;
my $opt_after = '2008-01-01';

my $wanthelp;
my $needhelp;

GetOptions(
	'all!'		=> \$opt_all,
	'date=s'	=> \$opt_after,
	'help!'		=> \$wanthelp,
) or $needhelp++;

if( $wanthelp ){
	print <<EOF;
usage $0 [opt]
find files for linking to an exercise

--all           check all files (even those already linked to an exercise)
--date=<d>      check only files newer than date (yyyy-mm-dd)

--help          this message
EOF
	exit 0;
}

my $after_date;
if( ! defined $opt_after ){
	# do nothing;

} elsif( $opt_after =~ /^(\d+)-(\d+)-(\d+)$/ ){
	$after_date = DateTime->new(
		year	=> $1,
		month	=> $2,
		day	=> $3,
		time_zone => 'local',
	);

} else {
	print STDERR "invalid argument to date option\n";
	++$needhelp;
}


if( $needhelp ){
	print STDERR "use --help for usage info\n";
	exit 1;
}


my $wk = WkDB->new;
my $db = $wk->db;

my $overlaps = $db->resultset('File')->search_overlapping_files({
	( $opt_all
		? ()
		: (
			ignore	=> 0,
			exercise	=> undef,
		)
	),
	( $after_date
		? ( start	=> { '>=' => $after_date->epoch } )
		: ()
	),
});

foreach my $row ( @$overlaps ){
	next unless @$row;

	my $first = $row->[0];
	my $start = DateTime->from_epoch(
		epoch => $first->start,
		time_zone => 'local',
	);
	my $end = DateTime->from_epoch(
		epoch => $first->end,
		time_zone => 'local',
	);

	print '# ', join(' ',
		$start->ymd, $start->hms, $end->hms, map {
			$_->id
		} @$row ), "\n";

	print join(' ', map {
		$_->path_abs;
	} @$row), "\n";
}
